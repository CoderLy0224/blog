(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{436:function(t,a,e){"use strict";e.r(a);var r=e(1),s=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("hr"),t._v(" "),a("h2",{attrs:{id:"theme-channing-cyan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#theme-channing-cyan"}},[t._v("#")]),t._v(" theme: channing-cyan")]),t._v(" "),a("h3",{attrs:{id:"vue双向绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue双向绑定"}},[t._v("#")]),t._v(" vue双向绑定")]),t._v(" "),a("p",[t._v("实现双向绑定：")]),t._v(" "),a("h4",{attrs:{id:"第一步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步"}},[t._v("#")]),t._v(" 第一步")]),t._v(" "),a("ul",[a("li",[t._v("要对数据进行监听和劫持--》用到object.defineproperty()中的get和set方法，需要observer（监听器）（劫持数据，获取数据） 监听属性，如果属性发生变化，通知所有的watcher(订阅者)属性要更新")])]),t._v(" "),a("h4",{attrs:{id:"第二步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步"}},[t._v("#")]),t._v(" 第二步")]),t._v(" "),a("ul",[a("li",[t._v("因为watcher有多个 需要Dep(订阅器)来专门搜集订阅者，实现observer和watcher之间统一管理")])]),t._v(" "),a("h4",{attrs:{id:"第三步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三步"}},[t._v("#")]),t._v(" 第三步")]),t._v(" "),a("ul",[a("li",[t._v("需要编写compile（有文档碎片，会在内存开辟空间，将所有的属性节点，添加到内存中） 对每个元素进行解析，将相关的指令对应初始化成一个watcher，并且替换模板数据和绑定相关的数据，此时当watcher接收到相应属性变化，就会执行更新函数，从而更新视图，实现双向绑定")])])])}),[],!1,null,null,null);a.default=s.exports}}]);